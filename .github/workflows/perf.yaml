name: Perf

on:
  pull_request:
    branches:
      - main
    paths:
      - "benchmarks/**"
      - "script/transform.go"
      # - ".github/workflows/perf.yaml"
  push:
    branches:
      - main
    paths:
      - "benchmarks/**"
      - "script/transform.go"
      # - ".github/workflows/perf.yaml"
  schedule:
    - cron: '25 0 * * 1,3'
  workflow_dispatch:
    inputs:
      imageTag:
        required: false
        default: ''
        description: ''

jobs:
  perf:
    name: Databend Release Perf
    runs-on: [self-hosted, X64, Linux, development]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get Databend version
        run: |
          if [ -z "${{ github.event.inputs.imageTag }}" ]; then
            LASTEST_TAG=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -s GET https://api.github.com/repos/datafuselabs/databend/tags\?per_page\=1 | jq -r '.[].name')
            echo "DATABEND_VERSION=${LASTEST_TAG}" >> $GITHUB_ENV
          else
            echo "DATABEND_VERSION=${{ github.event.inputs.imageTag }}" >> $GITHUB_ENV
          fi

      - name: Get Date
        run: |
          echo "PERF_DATE=$(date +"%Y-%m-%d")" >> $GITHUB_ENV

      - name: Setup BendSQL
        uses: ./.github/actions/setup-bendsql
        with:
          email: ${{ secrets.WEB_API_USER_EMAIL }}
          password: ${{ secrets.WEB_API_USER_PASSWORD }}
          org: orgchasen-slug-test

      - name: Run Perf
        env:
          WAREHOUSE_TAG: ${{ env.DATABEND_VERSION }}
          WAREHOUSE_NAME: query-perf
        run: |
          bendsql cloud warehouse delete ${WAREHOUSE_NAME}
          bendsql cloud warehouse create ${WAREHOUSE_NAME} --tag "${DATABEND_VERSION}" --size Large
          bendsql cloud warehouse ls
          bendsql cloud warehouse use ${WAREHOUSE_NAME}
          bendsql cloud warehouse resume ${WAREHOUSE_NAME} --wait
          bendsql cloud warehouse status ${WAREHOUSE_NAME}
          bendsql benchmark \
            --test-dir benchmarks \
            --output-format json \
            --output-dir collector \
            --size Large
          mv collector/numbers.json collector/numbers/${{ env.PERF_DATE }}-numbers.json
          mv collector/ontime.json collector/ontime/${{ env.PERF_DATE }}-ontime.json
          mv collector/hits.json collector/hits/${{ env.PERF_DATE }}-hits.json

      - name: Clean warehouse
        if: ${{ always() }}
        env:
          WAREHOUSE_NAME: query-perf
        run: |
          bendsql cloud warehouse delete ${WAREHOUSE_NAME}

      - name: Push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: 'perf: collect performance data from the latest release'
          pull: '--rebase --autostash origin main'
          push: origin ${{ github.head_ref }}

      - name: Setup Go Env
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17.0'

      - name: Print Go Version
        run: go version
      - name: Do Transform
        run: go run script/transform.go

      - name: Upload Result
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          publish_branch: gh-pages
          publish_dir: temp
          destination_dir: json
          keep_files: false
          commit_message: 'Update Transform Data'

      # - name: Nofify Email
      #   uses: dawidd6/action-send-mail@v3
      #   if: ${{ failure() }}
      #   with:
      #     server_address: smtp.feishu.cn
      #     server_port: 465
      #     username: ${{secrets.MAIL_USERNAME}}
      #     password: ${{secrets.MAIL_PASSWORD}}
      #     subject: Databend Perf Github Actions Run Failed
      #     to: cloud.dev@datafuselabs.com
      #     from: databend-perf
      #     secure: true
      #     body: Build job of ${{github.repository}} run failed

      - name: Notify Feishu Group
        uses: foxundermoon/feishu-action@v2
        if: ${{ always() }}
        with:
          url: ${{ secrets.FEISHU_BOT_WEBHOOK_URL }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: Build job of ${{ github.repository }} run ${{ job.status }}
                content:
                - [{"tag": "a", "text": "link", "href": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}]
